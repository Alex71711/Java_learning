// –§–∞–π–ª: ObjectClassDemo.java

//–ó–¥–µ—Å—å –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –º–µ—Ç–æ–¥–∞–º–∏ –∫–ª–∞—Å—Å–∞ Object:
//
//toString() –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞.
//
//equals() –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É.
//
//hashCode() –Ω—É–∂–µ–Ω –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–π (HashMap, HashSet).
//
//üìå –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ:
//
//–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞–∫–∞–∑–æ–≤, —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ë–î.
//
//–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ (System.out.println(order)).

class Person {
    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ toString()
    @Override
    public String toString() {
        return "Person{name='" + name + "', age=" + age + "}";
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ equals()
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;          // –µ—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ
        if (obj == null || getClass() != obj.getClass()) return false;
        Person p = (Person) obj;
        return age == p.age && name.equals(p.name);
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ hashCode()
    @Override
    public int hashCode() {
        return name.hashCode() + age;
    }
}

public class ObjectClassDemo {
    public static void main(String[] args) {
        Person p1 = new Person("–ò–≤–∞–Ω", 25);
        Person p2 = new Person("–ò–≤–∞–Ω", 25);

        // toString()
        System.out.println(p1);

        // equals()
        System.out.println("p1 == p2? " + p1.equals(p2));

        // hashCode()
        System.out.println("hashCode p1: " + p1.hashCode());
        System.out.println("hashCode p2: " + p2.hashCode());
    }
}
