// –§–∞–π–ª: AbstractClassDemo.java

//–ó–¥–µ—Å—å –ø–æ–∫–∞–∑–∞–Ω—ã –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã.
//
//–í –Ω–∏—Ö –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –æ–±—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª + –æ–±—è–∑–∞—Ç—å –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∞—Å—Ç—å –º–µ—Ç–æ–¥–æ–≤.
//
//üìå –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ:
//
//–í –≥—Ä–∞—Ñ–∏–∫–µ: Shape –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ draw(), –Ω–æ —Ä–∞–∑–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã —Ä–∏—Å—É—é—Ç –ø–æ-—Å–≤–æ–µ–º—É.
//
//–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: Payment –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã CardPayment, CashPayment.

// –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å
abstract class Animal {
    public abstract void makeSound(); // –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –±–µ–∑ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏

    public void sleep() { // –æ–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥
        System.out.println("–ñ–∏–≤–æ—Ç–Ω–æ–µ —Å–ø–∏—Ç");
    }
}

// –ö–ª–∞—Å—Å Dog –æ–±—è–∑–∞–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å makeSound()
class Dog extends Animal {
    @Override
    public void makeSound() {
        System.out.println("–ì–∞–≤-–≥–∞–≤!");
    }
}

public class AbstractClassDemo {
    public static void main(String[] args) {
        Dog d = new Dog();
        d.makeSound(); // —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
        d.sleep();     // —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥
    }
}
